---
# docker build stage. please note that if you want to use two-stage build
# consider to use gitlab.snapp.ir/docker/golang image for build.
.easy_ci:build:docker:
  image: docker:latest
  stage: build
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}-${CI_COMMIT_SHA}.tar
    expire_in: 1 hour
  before_script:
    - docker info
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  after_script:
    - docker save -o ${CI_PROJECT_NAME}-${CI_COMMIT_SHA}.tar $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
